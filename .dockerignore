# Node.js
# node_modules  # 注释掉，因为 Dockerfile 需要复制 node_modules
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# 构建输出
# dist  # 注释掉，因为 Dockerfile 需要复制 dist 目录
build

# 开发工具
.vscode
.idea
*.swp
*.swo

# 日志文件
logs
*.log

# 运行时数据
pids
*.pid
*.seed
*.pid.lock

# 覆盖率目录
coverage
.nyc_output

# 依赖目录
.npm
.eslintcache

# 可选的 npm 缓存目录
.npm

# 可选的 REPL 历史
.node_repl_history

# 输出的 npm 包
*.tgz

# Yarn 完整性文件
.yarn-integrity

# dotenv 环境变量文件
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler 缓存 (https://parceljs.org/)
.cache
.parcel-cache

# next.js 构建输出
.next

# nuxt.js 构建输出
.nuxt

# vuepress 构建输出
.vuepress/dist

# Serverless 目录
.serverless

# FuseBox 缓存
.fusebox/

# DynamoDB Local 文件
.dynamodb/

# Git
.git
.gitignore

# Docker
Dockerfile*
docker-compose*
.dockerignore

# 测试文件
test
tests
*.test.js
*.test.ts
*.spec.js
*.spec.ts

# 文档
README.md
*.md

# 临时文件
tmp
temp

# macOS
.DS_Store

# Windows
Thumbs.db

# 项目特定文件
response.json
test_pop3.js

# 数据文件（在容器中会通过 volume 挂载）
data/emails/*
data/invoices/*

# 开发配置
jest.config.js
tsconfig.json
.eslintrc*
.prettierrc*