# 🔧 修复后的 bridge.yunc.tech Nginx 配置
# 解决 "Client network socket disconnected before secure TLS connection was established" 错误
# 
# 主要修复：
# 1. SSL/TLS 协议和加密套件安全配置
# 2. 代理语法错误修复
# 3. 超时和缓冲配置优化
# 4. CORS 和错误处理完善

# HTTP 到 HTTPS 重定向
server {
    listen 80;
    server_name bridge.yunc.tech;
    return 301 https://$server_name$request_uri;
}

# HTTPS 主配置
server {
    listen 443 ssl http2;
    server_name bridge.yunc.tech;
    
    charset utf-8;

    # 优化的 Gzip 配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1k;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 🔧 修复的 SSL 配置 - 解决 TLS 连接问题
    ssl_certificate /etc/nginx/cert/bridge.yunc.tech.pem;
    ssl_certificate_key /etc/nginx/cert/bridge.yunc.tech.key;
    
    # ✅ 安全的 SSL 协议配置（移除弱协议）
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # ✅ 现代安全的加密套件（移除弱加密）
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # 🛡️ 安全头部
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # 静态文件服务
    location / {
        root /opt/dist;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # gaproject 代理（修复语法错误）
    location /gaproject {
        # ✅ 修复：移除反引号语法错误
        proxy_pass http://172.17.0.1:8500/gaproject;
        
        # ✅ 添加 HTTP 版本和连接设置
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # 代理头部设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header REMOTE-HOST $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # ✅ 超时配置防止连接挂起
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # ✅ 缓冲配置优化
        proxy_buffering on;
        proxy_buffer_size 64k;
        proxy_buffers 4 64k;
        proxy_busy_buffers_size 128k;
    }

    # 🎯 email-receiver-api 代理（完全修复）
    location /email-receiver-api {
        # ✅ 修复：移除反引号语法错误
        proxy_pass http://172.17.0.1:3000/email-receiver-api;
        
        # ✅ 关键：HTTP 版本和连接设置
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # ✅ 完整的代理头部设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # ✅ 关键：超时配置防止连接挂起
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # ✅ 缓冲配置优化
        proxy_buffering on;
        proxy_buffer_size 64k;
        proxy_buffers 8 64k;
        proxy_busy_buffers_size 128k;
        proxy_temp_file_write_size 64k;
        
        # ✅ 请求体大小限制（邮件附件支持）
        client_max_body_size 50M;
        
        # ✅ CORS 支持
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials true always;
        
        # ✅ 处理 OPTIONS 预检请求
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Allow-Credentials true;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
        
        # ✅ 错误处理
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }
    
    # 错误页面
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # 📊 日志配置
    access_log /var/log/nginx/bridge.yunc.tech.access.log combined;
    error_log /var/log/nginx/bridge.yunc.tech.error.log warn;
}